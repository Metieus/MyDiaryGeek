rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Regras para usuários principais
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;

      // Subcoleções do usuário - apenas o próprio usuário pode acessar
      match /medias/{mediaId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      match /reviews/{reviewId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      match /milestones/{milestoneId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      match /achievements/{achievementId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      match /settings/{settingId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Regras para seguidores - qualquer usuário autenticado pode ler, apenas o seguidor pode criar/deletar
      match /following/{targetUid} {
        allow read: if request.auth != null;
        allow create, delete: if request.auth != null && request.auth.uid == userId;
      }

      // Regras para seguidos - qualquer usuário autenticado pode ler, apenas o usuário sendo seguido pode criar/deletar
      match /followers/{sourceUid} {
        allow read: if request.auth != null;
        allow create, delete: if request.auth != null && request.auth.uid == sourceUid;
      }

      // Notificações pessoais - apenas o próprio usuário
      match /notifications/{notifId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Regras para solicitações de seguir
    match /followRequests/{requestId} {
      allow read: if request.auth != null &&
        (request.auth.uid == resource.data.fromUserId ||
         request.auth.uid == resource.data.toUserId);
      allow create: if request.auth != null && request.auth.uid == request.resource.data.fromUserId;
      allow update, delete: if request.auth != null &&
        (request.auth.uid == resource.data.fromUserId ||
         request.auth.uid == resource.data.toUserId);
    }

    // Regras para atividades globais - todos podem ler, apenas o autor pode escrever
    match /activities/{activityId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Regras para notificações globais - todos podem ler, apenas destinatário pode marcar como lida
    match /notifications/{notificationId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null &&
        (request.auth.uid == resource.data.toUserId ||
         request.auth.uid == resource.data.fromUserId);
      allow delete: if request.auth != null && request.auth.uid == resource.data.toUserId;
    }
  }
}
